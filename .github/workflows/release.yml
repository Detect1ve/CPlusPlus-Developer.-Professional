name: 'C++ CI'

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install CMake
        run: |
          wget -qO- "https://cmake.org/files/v4.0/cmake-4.0.3-linux-x86_64.tar.gz" | sudo tar --strip-components=1 -xz -C /usr/local
      - run: cmake -G Ninja -B build -D PATCH_VERSION=${{ github.run_number }}
      - run: cmake --build build
      - run: cmake --build build --target test
      - run: cmake --build build --target package
      - id: get_path
        name: Get package relative path
        run: echo "package_path=$(find . -name helloworld-0.0.${{ github.run_number }}-Linux.deb | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_path.outputs.package_path }}
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  pull_request_ci:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install CMake
        run: |
          wget -qO- "https://cmake.org/files/v4.0/cmake-4.0.3-linux-x86_64.tar.gz" | sudo tar --strip-components=1 -xz -C /usr/local
      - run: cmake -G Ninja -B build -D PATCH_VERSION=${{ github.run_number }}
      - run: cmake --build build
      - run: cmake --build build --target test
      - run: cmake --build build --target package
